'use client'
import { useState } from "react";

// use clientとmetadata併記するとエラーになる、、
// export const metadata = {
//   title: "List",
//   description: "Generated by create next app",
// };

// この辺はトグルの挙動確認用なのであとで消して頂いてOKです
const myMemoArray = [
  { item: "マカロニ", checked: false },
  { item: "ベーコン", checked: false },
  { item: "玉ねぎ", checked: false },
]

const curryArray = [
  { item: "にんじん", checked: false },
  { item: "牛すじ", checked: false },
  { item: "カレー粉", checked: false },
]

const gratinArray = [
  { item: "にんじん", checked: false },
  { item: "牛すじ", checked: false },
  { item: "カレー粉", checked: false },
]

export default function List() {

  // この辺はトグルの挙動確認用なのであとで消して頂いてOKです
  const [myMemo, setMyMeo] = useState(myMemoArray);
  const [curry, setCurry] = useState(curryArray);
  const [gratin, setGratin] = useState(gratinArray);


  const toggleMyMemoChecked = (index: number) => {
    const newMyMemo = [...myMemoArray];
    newMyMemo[index].checked = !newMyMemo[index].checked;
    setMyMeo(newMyMemo);
  };

  const toggleCurryChecked = (index: number) => {
    const newCurry = [...curryArray];
    newCurry[index].checked = !newCurry[index].checked;
    setCurry(newCurry);
  };

  const toggleGratinChecked = (index: number) => {
    const newGratin = [...gratinArray];
    newGratin[index].checked = !newGratin[index].checked;
    setGratin(newGratin);
  };


  return (
    <>
      {/* ヘッダー */}
      < div className="px-[15px] border-b-[1px] border-border text-center text-title font-bold text-[20px] py-[12px] " >
        <h1>買い物リスト</h1>
      </div >

      {/* じぶんメモ */}
      < section className=" pt-[8px] pb-[24px] " >
        <div className="flex justify-between py-[12px] items-center px-[16px] border-border border-b-[1px]">
          <h2 className="font-bold text-title text-[16px]">じぶんメモ</h2>
          <button>
            <svg width="20" height="20" viewBox="0 0 20 20" fill="none" xmlns="http://www.w3.org/2000/svg">
              <path d="M10 4.16666V15.8333" stroke="#6F6E77" strokeWidth="2" strokeLinecap="round" strokeLinejoin="round" />
              <path d="M4.16675 10H15.8334" stroke="#6F6E77" strokeWidth="2" strokeLinecap="round" strokeLinejoin="round" />
            </svg>
          </button>
        </div>

        <ul className="bg-white">
          {myMemoArray.map((memo, index) => (
            <li key={index} className="relative py-[15.5px] pl-[48px] pr-[16px] text-[14px] border-border border-b-[1px] leading-[18px]">
              <input
                type="checkbox"
                className={`
               appearance-none absolute w-[20px] h-[20px] top-1/2 -translate-y-1/2 left-[16px] 
              ${memo.checked ?
                    "after:content-[''] after:absolute after:w-[20px] after:h-[20px] bg-[url('/images/checked.png')]"
                    :
                    "before:content-[''] cursor-pointer before:absolute before:w-[20px] before:h-[20px] before:border-primary before:border-[1.5px] before:rounded-full"
                  }
              `}
                onChange={() => toggleMyMemoChecked(index)}
                checked={memo.checked}
              >
              </input>
              <label className="text-title">
                {memo.item}
              </label>
              <button className="absolute top-1/2 -translate-y-1/2 right-[16px] text-primary">
                削除
              </button>
            </li>
          ))}
        </ul>
      </ section>

      {/* レシピ別 */}
      < section className=" pt-[8px] pb-[24px] " >
        <div className="flex justify-between py-[12px] items-center px-[16px] border-border border-b-[1px]">
          <h2 className="font-bold text-title text-[16px]">カレー</h2>
          <button>
            <svg width="20" height="20" viewBox="0 0 20 20" fill="none" xmlns="http://www.w3.org/2000/svg">
              <g clipPath="url(#clip0_450_2165)">
                <path d="M9.16675 10C9.16675 10.221 9.25455 10.433 9.41083 10.5893C9.56711 10.7455 9.77907 10.8333 10.0001 10.8333C10.2211 10.8333 10.4331 10.7455 10.5893 10.5893C10.7456 10.433 10.8334 10.221 10.8334 10C10.8334 9.77899 10.7456 9.56703 10.5893 9.41075C10.4331 9.25447 10.2211 9.16667 10.0001 9.16667C9.77907 9.16667 9.56711 9.25447 9.41083 9.41075C9.25455 9.56703 9.16675 9.77899 9.16675 10Z" stroke="#6F6E77" strokeWidth="1.5" strokeLinecap="round" strokeLinejoin="round" />
                <path d="M9.16675 15.8333C9.16675 16.0543 9.25455 16.2663 9.41083 16.4226C9.56711 16.5789 9.77907 16.6667 10.0001 16.6667C10.2211 16.6667 10.4331 16.5789 10.5893 16.4226C10.7456 16.2663 10.8334 16.0543 10.8334 15.8333C10.8334 15.6123 10.7456 15.4004 10.5893 15.2441C10.4331 15.0878 10.2211 15 10.0001 15C9.77907 15 9.56711 15.0878 9.41083 15.2441C9.25455 15.4004 9.16675 15.6123 9.16675 15.8333Z" stroke="#6F6E77" strokeWidth="1.5" strokeLinecap="round" strokeLinejoin="round" />
                <path d="M9.16675 4.16666C9.16675 4.38768 9.25455 4.59964 9.41083 4.75592C9.56711 4.9122 9.77907 4.99999 10.0001 4.99999C10.2211 4.99999 10.4331 4.9122 10.5893 4.75592C10.7456 4.59964 10.8334 4.38768 10.8334 4.16666C10.8334 3.94565 10.7456 3.73369 10.5893 3.57741C10.4331 3.42113 10.2211 3.33333 10.0001 3.33333C9.77907 3.33333 9.56711 3.42113 9.41083 3.57741C9.25455 3.73369 9.16675 3.94565 9.16675 4.16666Z" stroke="#6F6E77" strokeWidth="1.5" strokeLinecap="round" strokeLinejoin="round" />
              </g>
              <defs>
                <clipPath id="clip0_450_2165">
                  <rect width="20" height="20" fill="white" />
                </clipPath>
              </defs>
            </svg>

          </button>
        </div>

        <ul className="bg-white">
          {curryArray.map((curry, index) => (
            <li key={index} className="relative py-[15.5px] pl-[48px] pr-[16px] text-[14px] border-border border-b-[1px] leading-[18px]">
              <input
                type="checkbox"
                className={`
               appearance-none absolute w-[20px] h-[20px] top-1/2 -translate-y-1/2 left-[16px] 
              ${curry.checked ?
                    "after:content-[''] after:absolute after:w-[20px] after:h-[20px] bg-[url('/images/checked.png')]"
                    :
                    "before:content-[''] cursor-pointer before:absolute before:w-[20px] before:h-[20px] before:border-primary before:border-[1.5px] before:rounded-full"
                  }
              `}
                onChange={() => toggleCurryChecked(index)}
                checked={curry.checked}
              >
              </input>
              <label className="text-title">
                {curry.item}
              </label>
            </li>
          ))}
        </ul>
      </ section>

      {/* レシピ別 */}
      < section className=" pt-[8px] pb-[24px] " >
        <div className="flex justify-between py-[12px] items-center px-[16px] border-border border-b-[1px]">
          <h2 className="font-bold text-title text-[16px]">グラタン</h2>
          <button>
            <svg width="20" height="20" viewBox="0 0 20 20" fill="none" xmlns="http://www.w3.org/2000/svg">
              <g clipPath="url(#clip0_450_2165)">
                <path d="M9.16675 10C9.16675 10.221 9.25455 10.433 9.41083 10.5893C9.56711 10.7455 9.77907 10.8333 10.0001 10.8333C10.2211 10.8333 10.4331 10.7455 10.5893 10.5893C10.7456 10.433 10.8334 10.221 10.8334 10C10.8334 9.77899 10.7456 9.56703 10.5893 9.41075C10.4331 9.25447 10.2211 9.16667 10.0001 9.16667C9.77907 9.16667 9.56711 9.25447 9.41083 9.41075C9.25455 9.56703 9.16675 9.77899 9.16675 10Z" stroke="#6F6E77" strokeWidth="1.5" strokeLinecap="round" strokeLinejoin="round" />
                <path d="M9.16675 15.8333C9.16675 16.0543 9.25455 16.2663 9.41083 16.4226C9.56711 16.5789 9.77907 16.6667 10.0001 16.6667C10.2211 16.6667 10.4331 16.5789 10.5893 16.4226C10.7456 16.2663 10.8334 16.0543 10.8334 15.8333C10.8334 15.6123 10.7456 15.4004 10.5893 15.2441C10.4331 15.0878 10.2211 15 10.0001 15C9.77907 15 9.56711 15.0878 9.41083 15.2441C9.25455 15.4004 9.16675 15.6123 9.16675 15.8333Z" stroke="#6F6E77" strokeWidth="1.5" strokeLinecap="round" strokeLinejoin="round" />
                <path d="M9.16675 4.16666C9.16675 4.38768 9.25455 4.59964 9.41083 4.75592C9.56711 4.9122 9.77907 4.99999 10.0001 4.99999C10.2211 4.99999 10.4331 4.9122 10.5893 4.75592C10.7456 4.59964 10.8334 4.38768 10.8334 4.16666C10.8334 3.94565 10.7456 3.73369 10.5893 3.57741C10.4331 3.42113 10.2211 3.33333 10.0001 3.33333C9.77907 3.33333 9.56711 3.42113 9.41083 3.57741C9.25455 3.73369 9.16675 3.94565 9.16675 4.16666Z" stroke="#6F6E77" strokeWidth="1.5" strokeLinecap="round" strokeLinejoin="round" />
              </g>
              <defs>
                <clipPath id="clip0_450_2165">
                  <rect width="20" height="20" fill="white" />
                </clipPath>
              </defs>
            </svg>

          </button>
        </div>

        <ul className="bg-white">
          {gratinArray.map((gratin, index) => (
            <li key={index} className="relative py-[15.5px] pl-[48px] pr-[16px] text-[14px] border-border border-b-[1px] leading-[18px]">
              <input
                type="checkbox"
                className={`
               appearance-none absolute w-[20px] h-[20px] top-1/2 -translate-y-1/2 left-[16px] 
              ${gratin.checked ?
                    "after:content-[''] after:absolute after:w-[20px] after:h-[20px] bg-[url('/images/checked.png')]"
                    :
                    "before:content-[''] cursor-pointer before:absolute before:w-[20px] before:h-[20px] before:border-primary before:border-[1.5px] before:rounded-full"
                  }
              `}
                onChange={() => toggleGratinChecked(index)}
                checked={gratin.checked}
              >
              </input>
              <label className="text-title">
                {gratin.item}
              </label>
            </li>
          ))}
        </ul>
      </ section>


    </>
  );
}
