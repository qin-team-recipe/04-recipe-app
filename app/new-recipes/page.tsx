import Link from "next/link";
import Image from "next/image";
import { LoginScreen } from "../components/Auth/LoginScreen";
import { getServerSession } from "next-auth";
import { trpcClient } from "../utils/trpc";
import { RouterOutput } from "@/server/trpc/router";

export const metadata = {
  title: "New Recipe",
  description: "Generated by create next app",
};

type Recipe = RouterOutput["chefsNewRecipes"][number];

function RecipeCard({ recipe }: { recipe: Recipe }) {
  return (
    <li className="w-[calc(50%_-_6px)] h-auto relative">
      <Link href={`/recipe/${recipe.id}/steps`}>
        <Image
          src={recipe.imageUrl ?? "/images/top/recipes/recipe1.png"}
          alt="レシピの写真"
          width={173}
          height={173}
          style={{ width: "100%" }}
          className="aspect-square object-cover rounded-[16px]"
        />
        <div className="rounded-[16px] absolute top-[8px] right-[8px] py-[8px] pr-[8px] pl-[25px] text-white text-[15px] leading-none bg-[#040013]/[.48]">
          <span className="absolute top-1/2 left-[8px] -translate-y-1/2 w-[14px] h-[14px] mt-[1.3px]">
            <Image src="/images/top/recipes/favIcon.png" width={14} height={14} alt="vector icon" />
          </span>
          {recipe.favoriteCount}
        </div>
        <p className="text-title font-bold mt-[8px] text-[12px] line-clamp-2">{recipe.name}</p>
        <p className="text-[10px] mt-[4px] line-clamp-1">{recipe.description}</p>
      </Link>
    </li>
  );
}

export default async function NewRecipes() {
  const session = await getServerSession();
  const newRecipes = await trpcClient.chefsNewRecipes.query();

  return (
    <>
      {/* ヘッダー */}
      <div className="px-[15px] border-b-[1px] border-border text-title font-bold text-[20px] py-[12px]  flex items-center gap-x-[16px]">
        <Link href="/favorite">
          <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <g clipPath="url(#clip0_393_1908)">
              <path d="M5 12H19" stroke="black" strokeWidth="1.5" strokeLinecap="round" strokeLinejoin="round" />
              <path d="M5 12L11 18" stroke="black" strokeWidth="1.5" strokeLinecap="round" strokeLinejoin="round" />
              <path d="M5 12L11 6" stroke="black" strokeWidth="1.5" strokeLinecap="round" strokeLinejoin="round" />
            </g>
            <defs>
              <clipPath id="clip0_393_1908">
                <rect width="24" height="24" fill="white" />
              </clipPath>
            </defs>
          </svg>
        </Link>

        <h1 className="text-[#020010]">新着レシピ</h1>
      </div>

      {session === null ? (
        <LoginScreen />
      ) : (
        <>
          {/* お気に入りレシピ */}
          <section className="px-[16px] pt-[10px] pb-[48px]">
            <ul className="flex justify-between gap-y-[16px] gap-x-[12px] flex-wrap mt-[10px]">
              {newRecipes.map((recipe) => (
                <RecipeCard key={recipe.id} recipe={recipe} />
              ))}
            </ul>
          </section>
        </>
      )}
    </>
  );
}
