import { trpcClient } from "@/app/utils/trpc";
import { ChefsRecipeCard } from "@/app/components/Chef/ChefsRecipeCard";
import { MyPageNavigation } from "../MyPageNavigation";
import MyPageHero from "@/app/components/MyPage/MyPageHero";
import CreateMyRecipeButton from "@/app/components/MyPage/CreateMyRecipeButton";

export const metadata = {
  title: "Chef",
  description: "Generated by create next app",
};

export default async function MyPageRecipes({ params }: { params: { userId: string } }) {
  const userId = params.userId;

  // ダミー。あとで消す
  // const user = {
  //   id: "foobarid",
  //   displayName: "山田シェフ",
  //   bio: "初の絵本出版！ 『 まねっこシェフ』 ・ふわふわ！スクランブルエッグ ・にぎにぎ！おにぎり 主婦の友社より３月３日、２冊同時発売！ 絶賛発売中！",
  //   followerCount: 123,
  //   recipeCount: 456,
  //   profileImageUrl: "/images/favChef.png",
  //   links: {
  //     youtube: {
  //       url: "https://www.youtube.com/channel/UCJFp8uSYCjXOMnkUyb3CQ3Q",
  //       siteName: "Youtube",
  //     },
  //     instagram: {
  //       url: "https://www.instagram.com/ryuji_ryuji_ryuji/",
  //       siteName: "Instagram",
  //     },
  //   },
  //   recipes: [
  //   ],
  //   popularRecipes: [
  //   ],
  // };

  const user = await trpcClient.generalChef.query({ userId });
  console.log({ user });

  return (
    <div className="relative">
      <MyPageHero
        user={{
          ...user,
          displayName: user.name,
          profileImageUrl: user.profileImageUrl ?? undefined,
          // bioを設定する
        }}
        userId={userId}
      />
      <MyPageNavigation userId={userId} page="recipes" />
      <section className="pt-[20px] px-[15px] pb-[48px]">
        {user?.recipes?.length === 0 ? (
          <p className="text-title">レシピがまだありません！</p>
        ) : (
          <ul className="flex justify-between gap-y-[16px] gap-x-[12px] flex-wrap">
            {user.recipes.map((recipe) => (
              <ChefsRecipeCard key={recipe.id} recipe={recipe} />
            ))}
          </ul>
        )}
      </section>

      <CreateMyRecipeButton />
    </div>
  );
}
