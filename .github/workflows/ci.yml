on:
  push:
env:
  VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
  VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
  DATABASE_URL: ${{ secrets.DATABASE_URL }}
jobs:
  lint:
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: 'yarn'
          cache-dependency-path: 'yarn.lock'
      - run: yarn install
      - run: yarn run lint
  deploy-preview:
    runs-on: ubuntu-22.04
    if: ${{ github.ref_name != 'main' }}
    environment:
      name: preview
      url: ${{ steps.deploy.outputs.url }}
    services:
      # NOTE: Next.jsのビルド時にDBに接続するので用意しています。PlanetScaleの準備ができたら削除します。
      db:
        image: mysql:8.0.33
        ports:
          - 3306:3306
        env:
          MYSQL_ROOT_PASSWORD: secret
          MYSQL_DATABASE: dev
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: 'yarn'
          cache-dependency-path: 'yarn.lock'
      - run: yarn install
      - run: yarn prisma migrate deploy
      - name: Install Vercel CLI
        run: npm install --global vercel@latest
      - name: Pull Vercel Environment Information
        run: vercel pull --yes --environment=preview --token=${{ secrets.VERCEL_TOKEN }}
      - name: Build Project Artifacts
        run: vercel build --token=${{ secrets.VERCEL_TOKEN }}
      - name: Deploy Project Artifacts to Vercel
        id: deploy
        run: echo "url=$(vercel deploy --prebuilt --token=${{ secrets.VERCEL_TOKEN }})" >> $GITHUB_OUTPUT
  deploy-production:
    runs-on: ubuntu-latest
    if: ${{ github.ref_name == 'main' }}
    services:
      # NOTE: Next.jsのビルド時にDBに接続するので用意しています。PlanetScaleの準備ができたら削除します。
      db:
        image: mysql:8.0.33
        ports:
          - 3306:3306
        env:
          MYSQL_ROOT_PASSWORD: secret
          MYSQL_DATABASE: dev
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: 'yarn'
          cache-dependency-path: 'yarn.lock'
      - run: yarn install
      - run: yarn prisma migrate deploy
      - name: Install Vercel CLI
        run: npm install --global vercel@latest
      - name: Pull Vercel Environment Information
        run: vercel pull --yes --environment=production --token=${{ secrets.VERCEL_TOKEN }}
      - name: Build Project Artifacts
        run: vercel build --prod --token=${{ secrets.VERCEL_TOKEN }}
      - name: Deploy Project Artifacts to Vercel
        run: vercel deploy --prebuilt --prod --token=${{ secrets.VERCEL_TOKEN }}
